<S> ::= <RUN_CODE_RULES_BLOCK> ### <ON_BULLET_HIT_CODE_RULES_BLOCK> ### <ON_BULLET_HIT_BULLET_CODE_RULES_BLOCK> ### <ON_BULLET_MISSED_CODE_RULES_BLOCK> ### <ON_HIT_BY_BULLET_CODE_RULES_BLOCK> ### <ON_HIT_ROBOT_CODE_RULES_BLOCK> ### <ON_HIT_WALL_CODE_RULES_BLOCK> ### <ON_SCANNED_ROBOT_CODE_RULES_BLOCK>

<RUN_CODE_RULES_BLOCK> ::= empty | <RUN_CODE_RULES>
<RUN_CODE_RULES> ::= <RUN_CODE_RULE> | <RUN_CODE_RULE> <RUN_CODE_RULES>
<RUN_CODE_RULE> ::= if ( <RUN_CODE_ANTECEDENTS> ) { <RUN_CODE_CONSEQUENTS> }
<RUN_CODE_ANTECEDENTS> ::= <RUN_CODE_BOOL_ANTECEDENT> | ( <RUN_CODE_BOOL_ANTECEDENT> <OPR_BOOL_ANTECEDENT> <RUN_CODE_ANTECEDENTS> )
<RUN_CODE_BOOL_ANTECEDENT> ::= <RUN_CODE_NUM_CLAUSE> == <RUN_CODE_NUM_CLAUSE> | <RUN_CODE_NUM_CLAUSE> != <RUN_CODE_NUM_CLAUSE> | <RUN_CODE_NUM_CLAUSE> > <RUN_CODE_NUM_CLAUSE> | <RUN_CODE_NUM_CLAUSE> < <RUN_CODE_NUM_CLAUSE> | <RUN_CODE_NUM_CLAUSE> <= <RUN_CODE_NUM_CLAUSE> | <RUN_CODE_NUM_CLAUSE> >= <RUN_CODE_NUM_CLAUSE>
<RUN_CODE_NUM_CLAUSE> ::= <RUN_CODE_NUM_VALUE> | ( <RUN_CODE_NUM_VALUE> <OPR_NUM_VALUE> <RUN_CODE_NUM_CLAUSE> )
<RUN_CODE_NUM_VALUE> ::= realvalue | <RUN_CODE_MATH_OPR> | <ROBOT_DATA>
<RUN_CODE_MATH_OPR> ::= Math.cos( <RUN_CODE_NUM_CLAUSE> ) | Math.sin( <RUN_CODE_NUM_CLAUSE> ) | Math.tan( <RUN_CODE_NUM_CLAUSE> ) | Math.sqrt( <RUN_CODE_NUM_CLAUSE> ) | Math.pow( <RUN_CODE_NUM_CLAUSE> , <RUN_CODE_NUM_CLAUSE> )
<ROBOT_DATA> ::= getGunHeadingRadians() | getGunTurnRemainingRadians() | getHeadingRadians() | getRadarHeadingRadians() | getRadarTurnRemainingRadians() | getTurnRemainingRadians() | getEnergy() | getGunCoolingRate() | getGunHeat() | getVelocity() | getX() | getY()
<OPR_NUM_VALUE> ::= + | - | * | %
<OPR_BOOL_ANTECEDENT> ::= && | ||
<RUN_CODE_CONSEQUENTS> ::= <RUN_CODE_CONSEQUENT> | <RUN_CODE_CONSEQUENT> <RUN_CODE_CONSEQUENTS>
<RUN_CODE_CONSEQUENT> ::= doNothing(); | setAhead( <RUN_CODE_NUM_CLAUSE> ); | setBack( <RUN_CODE_NUM_CLAUSE> ); | setFire( <RUN_CODE_NUM_CLAUSE> ); | setTurnGunLeftRadians( <RUN_CODE_NUM_CLAUSE> ); | setTurnGunRightRadians( <RUN_CODE_NUM_CLAUSE> ); | setTurnLeftRadians( <RUN_CODE_NUM_CLAUSE> ); | setTurnRadarLeftRadians( <RUN_CODE_NUM_CLAUSE> ); | setTurnRadarRightRadians( <RUN_CODE_NUM_CLAUSE> ); | setTurnRightRadians( <RUN_CODE_NUM_CLAUSE> );

<ON_BULLET_HIT_CODE_RULES_BLOCK> ::= empty | <ON_BULLET_HIT_CODE_RULES>
<ON_BULLET_HIT_CODE_RULES> ::= <ON_BULLET_HIT_CODE_RULE> | <ON_BULLET_HIT_CODE_RULE> <ON_BULLET_HIT_CODE_RULES>
<ON_BULLET_HIT_CODE_RULE> ::= if ( <ON_BULLET_HIT_CODE_ANTECEDENTS> ) { <ON_BULLET_HIT_CODE_CONSEQUENTS> }
<ON_BULLET_HIT_CODE_ANTECEDENTS> ::= <ON_BULLET_HIT_CODE_BOOL_ANTECEDENT> | ( <ON_BULLET_HIT_CODE_BOOL_ANTECEDENT> <OPR_BOOL_ANTECEDENT> <ON_BULLET_HIT_CODE_ANTECEDENTS> )
<ON_BULLET_HIT_CODE_BOOL_ANTECEDENT> ::= <ON_BULLET_HIT_CODE_NUM_CLAUSE> == <ON_BULLET_HIT_CODE_NUM_CLAUSE> | <ON_BULLET_HIT_CODE_NUM_CLAUSE> != <ON_BULLET_HIT_CODE_NUM_CLAUSE> | <ON_BULLET_HIT_CODE_NUM_CLAUSE> > <ON_BULLET_HIT_CODE_NUM_CLAUSE> | <ON_BULLET_HIT_CODE_NUM_CLAUSE> < <ON_BULLET_HIT_CODE_NUM_CLAUSE> | <ON_BULLET_HIT_CODE_NUM_CLAUSE> <= <ON_BULLET_HIT_CODE_NUM_CLAUSE> | <ON_BULLET_HIT_CODE_NUM_CLAUSE> >= <ON_BULLET_HIT_CODE_NUM_CLAUSE>
<ON_BULLET_HIT_CODE_NUM_CLAUSE> ::= <ON_BULLET_HIT_CODE_NUM_VALUE> | ( <ON_BULLET_HIT_CODE_NUM_VALUE> <OPR_NUM_VALUE> <ON_BULLET_HIT_CODE_NUM_CLAUSE> )
<ON_BULLET_HIT_CODE_NUM_VALUE> ::= realvalue | <ON_BULLET_HIT_CODE_MATH_OPR> | <ROBOT_DATA> | <ON_BULLET_HIT_EVENT_DATA>
<ON_BULLET_HIT_CODE_MATH_OPR> ::= Math.cos( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ) | Math.sin( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ) | Math.tan( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ) | Math.sqrt( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ) | Math.pow( <ON_BULLET_HIT_CODE_NUM_CLAUSE> , <ON_BULLET_HIT_CODE_NUM_CLAUSE> )
<ON_BULLET_HIT_EVENT_DATA> ::= event.getEnergy()
<ON_BULLET_HIT_CODE_CONSEQUENTS> ::= <ON_BULLET_HIT_CODE_CONSEQUENT> | <ON_BULLET_HIT_CODE_CONSEQUENT> <ON_BULLET_HIT_CODE_CONSEQUENTS>
<ON_BULLET_HIT_CODE_CONSEQUENT> ::= doNothing(); | setAhead( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ); | setBack( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ); | setFire( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ); | setTurnGunLeftRadians( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ); | setTurnGunRightRadians( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ); | setTurnLeftRadians( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ); | setTurnRadarLeftRadians( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ); | setTurnRadarRightRadians( <ON_BULLET_HIT_CODE_NUM_CLAUSE> ); | setTurnRightRadians( <ON_BULLET_HIT_CODE_NUM_CLAUSE> );

<ON_BULLET_HIT_BULLET_CODE_RULES_BLOCK> ::= empty | <RUN_CODE_RULES>

<ON_BULLET_MISSED_CODE_RULES_BLOCK> ::= empty | <RUN_CODE_RULES>

<ON_HIT_BY_BULLET_CODE_RULES_BLOCK> ::= empty | <ON_HIT_BY_BULLET_CODE_RULES>
<ON_HIT_BY_BULLET_CODE_RULES> ::= <ON_HIT_BY_BULLET_CODE_RULE> | <ON_HIT_BY_BULLET_CODE_RULE> <ON_HIT_BY_BULLET_CODE_RULES>
<ON_HIT_BY_BULLET_CODE_RULE> ::= if ( <ON_HIT_BY_BULLET_CODE_ANTECEDENTS> ) { <ON_HIT_BY_BULLET_CODE_CONSEQUENTS> }
<ON_HIT_BY_BULLET_CODE_ANTECEDENTS> ::= <ON_HIT_BY_BULLET_CODE_BOOL_ANTECEDENT> | ( <ON_HIT_BY_BULLET_CODE_BOOL_ANTECEDENT> <OPR_BOOL_ANTECEDENT> <ON_HIT_BY_BULLET_CODE_ANTECEDENTS> )
<ON_HIT_BY_BULLET_CODE_BOOL_ANTECEDENT> ::= <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> == <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> | <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> != <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> | <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> > <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> | <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> < <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> | <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> <= <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> | <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> >= <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE>
<ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ::= <ON_HIT_BY_BULLET_CODE_NUM_VALUE> | ( <ON_HIT_BY_BULLET_CODE_NUM_VALUE> <OPR_NUM_VALUE> <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> )
<ON_HIT_BY_BULLET_CODE_NUM_VALUE> ::= realvalue | <ON_HIT_BY_BULLET_CODE_MATH_OPR> | <ROBOT_DATA> | <ON_HIT_BY_BULLET_EVENT_DATA>
<ON_HIT_BY_BULLET_CODE_MATH_OPR> ::= Math.cos( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ) | Math.sin( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ) | Math.tan( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ) | Math.sqrt( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ) | Math.pow( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> , <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> )
<ON_HIT_BY_BULLET_EVENT_DATA> ::= event.getHeadingRadians() | event.getBearingRadians()
<ON_HIT_BY_BULLET_CODE_CONSEQUENTS> ::= <ON_HIT_BY_BULLET_CODE_CONSEQUENT> | <ON_HIT_BY_BULLET_CODE_CONSEQUENT> <ON_HIT_BY_BULLET_CODE_CONSEQUENTS>
<ON_HIT_BY_BULLET_CODE_CONSEQUENT> ::= doNothing(); | setAhead( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ); | setBack( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ); | setFire( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ); | setTurnGunLeftRadians( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ); | setTurnGunRightRadians( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ); | setTurnLeftRadians( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ); | setTurnRadarLeftRadians( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ); | setTurnRadarRightRadians( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> ); | setTurnRightRadians( <ON_HIT_BY_BULLET_CODE_NUM_CLAUSE> );

<ON_HIT_ROBOT_CODE_RULES_BLOCK> ::= empty | <ON_HIT_ROBOT_CODE_RULES>
<ON_HIT_ROBOT_CODE_RULES> ::= <ON_HIT_ROBOT_CODE_RULE> | <ON_HIT_ROBOT_CODE_RULE> <ON_HIT_ROBOT_CODE_RULES>
<ON_HIT_ROBOT_CODE_RULE> ::= if ( <ON_HIT_ROBOT_CODE_ANTECEDENTS> ) { <ON_HIT_ROBOT_CODE_CONSEQUENTS> }
<ON_HIT_ROBOT_CODE_ANTECEDENTS> ::= <ON_HIT_ROBOT_CODE_BOOL_ANTECEDENT> | ( <ON_HIT_ROBOT_CODE_BOOL_ANTECEDENT> <OPR_BOOL_ANTECEDENT> <ON_HIT_ROBOT_CODE_ANTECEDENTS> )
<ON_HIT_ROBOT_CODE_BOOL_ANTECEDENT> ::= <ON_HIT_ROBOT_CODE_NUM_CLAUSE> == <ON_HIT_ROBOT_CODE_NUM_CLAUSE> | <ON_HIT_ROBOT_CODE_NUM_CLAUSE> != <ON_HIT_ROBOT_CODE_NUM_CLAUSE> | <ON_HIT_ROBOT_CODE_NUM_CLAUSE> > <ON_HIT_ROBOT_CODE_NUM_CLAUSE> | <ON_HIT_ROBOT_CODE_NUM_CLAUSE> < <ON_HIT_ROBOT_CODE_NUM_CLAUSE> | <ON_HIT_ROBOT_CODE_NUM_CLAUSE> <= <ON_HIT_ROBOT_CODE_NUM_CLAUSE> | <ON_HIT_ROBOT_CODE_NUM_CLAUSE> >= <ON_HIT_ROBOT_CODE_NUM_CLAUSE>
<ON_HIT_ROBOT_CODE_NUM_CLAUSE> ::= <ON_HIT_ROBOT_CODE_NUM_VALUE> | ( <ON_HIT_ROBOT_CODE_NUM_VALUE> <OPR_NUM_VALUE> <ON_HIT_ROBOT_CODE_NUM_CLAUSE> )
<ON_HIT_ROBOT_CODE_NUM_VALUE> ::= realvalue | <ON_HIT_ROBOT_CODE_MATH_OPR> | <ROBOT_DATA> | <ON_HIT_ROBOT_EVENT_DATA>
<ON_HIT_ROBOT_CODE_MATH_OPR> ::= Math.cos( <ON_HIT_ROBOT_CODE_NUM_VALUE> ) | Math.sin( <ON_HIT_ROBOT_CODE_NUM_VALUE> ) | Math.tan( <ON_HIT_ROBOT_CODE_NUM_VALUE> ) | Math.sqrt( <ON_HIT_ROBOT_CODE_NUM_VALUE> ) | Math.pow( <ON_HIT_ROBOT_CODE_NUM_VALUE> , <ON_HIT_ROBOT_CODE_NUM_VALUE> )
<ON_HIT_ROBOT_EVENT_DATA> ::= event.getBearingRadians() | event.getEnergy()
<ON_HIT_ROBOT_CODE_CONSEQUENTS> ::= <ON_HIT_ROBOT_CODE_CONSEQUENT> | <ON_HIT_ROBOT_CODE_CONSEQUENT> <ON_HIT_ROBOT_CODE_CONSEQUENTS>
<ON_HIT_ROBOT_CODE_CONSEQUENT> ::= doNothing(); | setAhead( <ON_HIT_ROBOT_CODE_NUM_CLAUSE> ); | setBack( <ON_HIT_ROBOT_CODE_NUM_CLAUSE> ); | setFire( <ON_HIT_ROBOT_CODE_NUM_CLAUSE> ); | setTurnGunLeftRadians( <ON_HIT_ROBOT_CODE_NUM_CLAUSE> ); | setTurnGunRightRadians( <ON_HIT_ROBOT_CODE_NUM_CLAUSE> ); | setTurnLeftRadians( <ON_HIT_ROBOT_CODE_NUM_CLAUSE> ); | setTurnRadarLeftRadians( <ON_HIT_ROBOT_CODE_NUM_CLAUSE> ); | setTurnRadarRightRadians( <ON_HIT_ROBOT_CODE_NUM_CLAUSE> ); | setTurnRightRadians( <ON_HIT_ROBOT_CODE_NUM_CLAUSE> );

<ON_HIT_WALL_CODE_RULES_BLOCK> ::= empty | <ON_HIT_WALL_CODE_RULES>
<ON_HIT_WALL_CODE_RULES> ::= <ON_HIT_WALL_CODE_RULE> | <ON_HIT_WALL_CODE_RULE> <ON_HIT_WALL_CODE_RULES>
<ON_HIT_WALL_CODE_RULE> ::= if ( <ON_HIT_WALL_CODE_ANTECEDENTS> ) { <ON_HIT_WALL_CODE_CONSEQUENTS> }
<ON_HIT_WALL_CODE_ANTECEDENTS> ::= <ON_HIT_WALL_CODE_BOOL_ANTECEDENT> | ( <ON_HIT_WALL_CODE_BOOL_ANTECEDENT> <OPR_BOOL_ANTECEDENT> <ON_HIT_WALL_CODE_ANTECEDENTS> )
<ON_HIT_WALL_CODE_BOOL_ANTECEDENT> ::= <ON_HIT_WALL_CODE_NUM_CLAUSE> == <ON_HIT_WALL_CODE_NUM_CLAUSE> | <ON_HIT_WALL_CODE_NUM_CLAUSE> != <ON_HIT_WALL_CODE_NUM_CLAUSE> | <ON_HIT_WALL_CODE_NUM_CLAUSE> > <ON_HIT_WALL_CODE_NUM_CLAUSE> | <ON_HIT_WALL_CODE_NUM_CLAUSE> < <ON_HIT_WALL_CODE_NUM_CLAUSE> | <ON_HIT_WALL_CODE_NUM_CLAUSE> <= <ON_HIT_WALL_CODE_NUM_CLAUSE> | <ON_HIT_WALL_CODE_NUM_CLAUSE> >= <ON_HIT_WALL_CODE_NUM_CLAUSE>
<ON_HIT_WALL_CODE_NUM_CLAUSE> ::= <ON_HIT_WALL_CODE_NUM_VALUE> | ( <ON_HIT_WALL_CODE_NUM_VALUE> <OPR_NUM_VALUE> <ON_HIT_WALL_CODE_NUM_CLAUSE> )
<ON_HIT_WALL_CODE_NUM_VALUE> ::= realvalue | <ON_HIT_WALL_CODE_MATH_OPR> | <ROBOT_DATA> | <ON_HIT_WALL_EVENT_DATA>
<ON_HIT_WALL_CODE_MATH_OPR> ::= Math.cos( <ON_HIT_WALL_CODE_NUM_CLAUSE> ) | Math.sin( <ON_HIT_WALL_CODE_NUM_CLAUSE> ) | Math.tan( <ON_HIT_WALL_CODE_NUM_CLAUSE> ) | Math.sqrt( <ON_HIT_WALL_CODE_NUM_CLAUSE> ) | Math.pow( <ON_HIT_WALL_CODE_NUM_CLAUSE> , <ON_HIT_WALL_CODE_NUM_CLAUSE> )
<ON_HIT_WALL_EVENT_DATA> ::= event.getBearingRadians()
<ON_HIT_WALL_CODE_CONSEQUENTS> ::= <ON_HIT_WALL_CODE_CONSEQUENT> | <ON_HIT_WALL_CODE_CONSEQUENT> <ON_HIT_WALL_CODE_CONSEQUENTS>
<ON_HIT_WALL_CODE_CONSEQUENT> ::= doNothing(); | setAhead( <ON_HIT_WALL_CODE_NUM_CLAUSE> ); | setBack( <ON_HIT_WALL_CODE_NUM_CLAUSE> ); | setFire( <ON_HIT_WALL_CODE_NUM_CLAUSE> ); | setTurnGunLeftRadians( <ON_HIT_WALL_CODE_NUM_CLAUSE> ); | setTurnGunRightRadians( <ON_HIT_WALL_CODE_NUM_CLAUSE> ); | setTurnLeftRadians( <ON_HIT_WALL_CODE_NUM_CLAUSE> ); | setTurnRadarLeftRadians( <ON_HIT_WALL_CODE_NUM_CLAUSE> ); | setTurnRadarRightRadians( <ON_HIT_WALL_CODE_NUM_CLAUSE> ); | setTurnRightRadians( <ON_HIT_WALL_CODE_NUM_CLAUSE> );

<ON_SCANNED_ROBOT_CODE_RULES_BLOCK> ::= empty | <ON_SCANNED_ROBOT_CODE_RULES>
<ON_SCANNED_ROBOT_CODE_RULES> ::= <ON_SCANNED_ROBOT_CODE_RULE> | <ON_SCANNED_ROBOT_CODE_RULE> <ON_SCANNED_ROBOT_CODE_RULES>
<ON_SCANNED_ROBOT_CODE_RULE> ::= if ( <ON_SCANNED_ROBOT_CODE_ANTECEDENTS> ) { <ON_SCANNED_ROBOT_CODE_CONSEQUENTS> }
<ON_SCANNED_ROBOT_CODE_ANTECEDENTS> ::= <ON_SCANNED_ROBOT_CODE_BOOL_ANTECEDENT> | ( <ON_SCANNED_ROBOT_CODE_BOOL_ANTECEDENT> <OPR_BOOL_ANTECEDENT> <ON_SCANNED_ROBOT_CODE_ANTECEDENTS> )
<ON_SCANNED_ROBOT_CODE_BOOL_ANTECEDENT> ::= <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> == <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> | <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> != <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> | <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> > <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> | <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> < <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> | <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> <= <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> | <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> >= <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE>
<ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ::= <ON_SCANNED_ROBOT_CODE_NUM_VALUE> | ( <ON_SCANNED_ROBOT_CODE_NUM_VALUE> <OPR_NUM_VALUE> <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> )
<ON_SCANNED_ROBOT_CODE_NUM_VALUE> ::= realvalue | <ON_SCANNED_ROBOT_CODE_MATH_OPR> | <ROBOT_DATA> | <ON_SCANNED_ROBOT_EVENT_DATA>
<ON_SCANNED_ROBOT_CODE_MATH_OPR> ::= Math.cos( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ) | Math.sin( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ) | Math.tan( <ON_HIT_BY_BULLET_EVENT_DATA> ) | Math.sqrt( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ) | Math.pow( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> , <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> )
<ON_SCANNED_ROBOT_EVENT_DATA> ::= event.getBearingRadians() | event.getDistance() | event.getEnergy() | event.getHeadingRadians() | event.getVelocity()
<ON_SCANNED_ROBOT_CODE_CONSEQUENTS> ::= <ON_SCANNED_ROBOT_CODE_CONSEQUENT> | <ON_SCANNED_ROBOT_CODE_CONSEQUENT> <ON_SCANNED_ROBOT_CODE_CONSEQUENTS>
<ON_SCANNED_ROBOT_CODE_CONSEQUENT> ::= doNothing(); | setAhead( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ); | setBack( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ); | setFire( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ); | setTurnGunLeftRadians( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ); | setTurnGunRightRadians( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ); | setTurnLeftRadians( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ); | setTurnRadarLeftRadians( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ); | setTurnRadarRightRadians( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> ); | setTurnRightRadians( <ON_SCANNED_ROBOT_CODE_NUM_CLAUSE> );
